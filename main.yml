AWSTemplateFormatVersion: "2010-09-09"
Description: Grupo de Seguridad y plantilla
Parameters:
  EC2Instance:
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
  EC2AMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
Resources:
  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Grupo de Seguridad interno para la pila ${AWS::StackName}"
      GroupName: WebSecurityGroup
      Tags: 
      - Key: "Name"
        Value: !Join ["-", [!Ref "AWS::StackName", !Ref "AWS::AccountId"]]
      SecurityGroupIngress:
      - IpProtocol: TCP
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: TCP
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: TCP
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
  WordPressServer:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT7M
        Count: 1
    Properties:
      ImageId: !Ref EC2AMI
      InstanceType: !Ref EC2Instance
      KeyName: vockey
      IamInstanceProfile: LabInstanceProfile
      SecurityGroupIds: 
        - Ref: WebSecurityGroup
      Tags: 
      - Key: "Name"
        Value: !Join 
                - "-"
                - - !Ref AWS::StackName 
                  - !Ref AWS::AccountId
      UserData: 
          Fn::Base64: !Sub |
              #!/bin/bash -xe
              exec > /tmp/install.log 2>&1
              
              #Instalar pila LAMP
              sudo yum update -y
              sudo yum install -y httpd wget php-fpm php-mysqli php-json php php-devel2
              sudo yum install -y httpd mariadb-server
              systemctl start httpd
              systemctl enable httpd
              /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WordPressServer --region ${AWS::Region}
              
              #instalación Wordpress
              wget https://wordpress.org/latest.tar.gz
              tar -xzf latest.tar.gz
              
#asegurar base de datos
              #sudo systemctl start mariadb
              #sudo -y mysql_secure_installation
              
#To create a database user and database for your WordPress installation
              #yum systemctl start mariadb httpd
              #mysql -u root -p #login root
              #CREATE USER 'Javi'@'localhost' IDENTIFIED BY '1234';
              #CREATE DATABASE `wordpress-db-Javi`
              #GRANT ALL PRIVILEGES ON `wordpress-db-Javi`.* TO "Javi"@"localhost"; # dar permiso al usuario creado
              #FLUSH PRIVILEGES;
              #exit
              
#Permissions for Apache web server
              #sudo usermod -a -G apache ec2-user #añadir usuario ec2-user a apache group
              #sudo chown -R ec2-user:apache /var/www
              #sudo chmod 2775 /var/www && find /var/www -type d -exec sudo chmod 2775 {} \;
              #find /var/www -type f -exec sudo chmod 0664 {} \;
              
#Editar archivo
              #cp wordpress/wp-config-sample.php wordpress/wp-config.php #backup archivo original
              #sed 's/database_name_here/wordpress-db-Javi/' wp-config.php #cambiar nombre database
              #sed 's/wordpress-user/Javi/' wp-config.php #poner usuario
              #sed 's/your_strong_password/1234/' wp-config.php #poner contraseña usuario




  BaseDeDatosMariaDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: BBDD-MDB-Javi
      DBName: BBDD_MD
      AllocatedStorage: '10'
      DBInstanceClass: db.t3.micro
      Engine: mariadb
      EngineVersion: '10.6.10'
      MasterUsername: admin
      MasterUserPassword: 'Javi-1234'
      VPCSecurityGroups:
        - !GetAtt WebSecurityGroup.GroupId
        

Outputs:
  InstanceId:
    Description: 'Valor de la Id de la instancia creada'
    Value: !Ref WordPressServer
    Export: 
      Name: InstanceId
  ServerPublicIP:
    Description: 'DNS pública del servidor junto con protocolo y puerto'
    Value: !Sub 'http://${WordPressServer.PublicDnsName}:80'
    Export: 
      Name: 'ServerPublicIP'